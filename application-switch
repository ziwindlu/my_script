#!/bin/bash

# 帮助{{{
help(){
      echo "Usage: $0 {start|stop|toggle}"
}
# }}}
# 初始化{{{
init(){
		# 脚本在发生错误时立即退出。
		set -e 
		#使用未定义的变量时退出。
		set -u 
		# 确保管道中任何命令失败都会导致脚本退出。
		set -o pipefail
		check_depen
		# 创建日志文件
		if [ ! -f "$LOG_FILE" ]; then
				touch "$LOG_FILE"
		fi
		# 配置文件路径
		CONFIG_FILE="$HOME/shell/programs.conf"
		# 检查配置文件是否存在
		if [[ ! -f "$CONFIG_FILE" ]]; then
				echo "Error: Configuration file $CONFIG_FILE not found!"
				exit 1
		fi
}
# }}}
# 参数解析{{{
get_opts(){
		PROGRAM_NAME=$1
		RUN=${2:-toggle}
		# 获取命令
		get_commands "$PROGRAM_NAME"
}
#}}}
# 检查操作系统是否支持{{{
check_os_suport(){
		source /etc/os-release
		case $ID in
				centos | ubuntu | debian | kali | arch)
						;;
				*)
						echo "Error: $ID is not supported."
						exit 1
		esac
}
# }}}
# 检测依赖软件包{{{
DEPENS=("pgrep" "grep")
check_depen(){
		for c in ${DEPENS[@]}; do
				if has_cmd $c ; then
						echo "Error: $c is not installed."
						exit 1
				fi 
		done
}
# }}}
# 是否存在某个命令{{{
has_cmd () {
		[ command -v $1 >/dev/null 2>&1 -gt 0 ]
}
# }}}
# 日志{{{
LOG_FILE="$(dirname $0)/.$(basename $0).log"
log() {
		if [ $# -eq 1 ];then
				local message="$1"
				local level="INFO"
		else
				local level="$1"
				local message="$2"
		fi
		echo "[$(date '+%Y-%m-%d %H:%M:%S')] [$level] $message" | tee -a "$LOG_FILE"
}
# }}}

# 从配置文件读取指定程序的启动和停止命令
get_commands() {
    local program_name=$1
    START_COMMAND=$(grep "^$program_name.start=" "$CONFIG_FILE" | cut -d'=' -f2)
    STOP_COMMAND=$(grep "^$program_name.stop=" "$CONFIG_FILE" | cut -d'=' -f2)
}

# 检查程序是否运行
check_program_running() {
    pgrep -x "$1" > /dev/null 2>&1
    return $?
}

# 停止程序
stop_program() {
    log INFO "Stopping $PROGRAM_NAME..."
    eval "$STOP_COMMAND"
}

# 启动程序
start_program() {
    log INFO "Starting $PROGRAM_NAME..."
    eval "$START_COMMAND"
}


# 开关
sw(){
		if check_program_running "$PROGRAM_NAME"; then
				stop_program
		else
				start_program
		fi
}

# 用户定义命令
run(){
		if [[ -z $START_COMMAND || -z $STOP_COMMAND ]]; then
				echo "Error: Configuration for $PROGRAM_NAME not found in $CONFIG_FILE!"
				exit 1
		fi
		if [ ! -z $RUN ]; then
				case $RUN in
						start)
								start_program
								;;
						stop)
								stop_program
								;;
						toggle)
								sw
								;;
						*)
								help
								;;
				esac
		else
				sw
		fi
		exit 0
}

main(){
		init 
		get_opts $@
		run $@
}

main $@
